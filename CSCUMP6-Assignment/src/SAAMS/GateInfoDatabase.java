package SAAMS;
// Generated by Together

import java.util.Observable;



public class GateInfoDatabase extends Observable  {
private Gate[] gates;
public int maxGateNumber = 2;


public GateInfoDatabase() //constructer       
{
 gates = new Gate[maxGateNumber]; ////create the gate to aircarft 

        for (int i = 0; i < maxGateNumber; i++) {
  gates[i] = new Gate();
        }
    }

 public int getStatus(int gateNumber){ // it will gate the number of the gates
  return gates[gateNumber].getStatus(); // then will returen the ststus

  }

  public int[] getStatuses(){ 
      return null;
  }

  public void allocate(int gateNumber, int mCode){ //gate is FREE in allocate then airc will choose by mCode
      gates[gateNumber].allocate(mCode);
        changed();
  }
    private void changed() {
        setChanged();
       notifyObservers();
       System.out.println("PASSED");
}

  public void docked(int gateNumber){ //expecte the flihgt will arrive at the gate.
      gates[gateNumber].docked();
  }


  public void departed(int gateNumber){ //this is for the flight leaveds and the gate be free=0
    gates[gateNumber].departed();
  }
  
  
  
public int getGateAssignedToMR(int mCode) { //this to Assigned ToMR (managment recored)
 for (int i = 0; i < maxGateNumber; i++) {

 if (gates[i].mCode == mCode) {
   return i;
            }
        }
        throw new IllegalArgumentException("Invalid mCode provided");
    }


public String statusOfGate(int status) { //status of gates , length =2
        switch (status) {
            case 0:
                return "FREE";
            case 1:
                return "RESERVED";
            case 2:
                return "OCCUPIED";
            default:
                return "NONE";
        }
}

 public int assignedmCode(int gateNumber) {
        return gates[gateNumber].getmCode();
    }
}
